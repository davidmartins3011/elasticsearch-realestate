input { 
  stdin { } 
}
filter {
  csv {
    separator => ","
    columns => [
      "id","number","street_name","zipcode","city","source","latitude","longitude"
    ]
    remove_field => [ "message", "@version", "@timestamp", "host" ]
  }
  mutate {
    convert => { "longitude" => "float" }
    convert => { "latitude" => "float" }
  }
  mutate {
    convert => { "longitude" => "float" }
    convert => { "latitude" => "float" }
    rename => {
      "longitude" => "[location][lon]"
      "latitude" => "[location][lat]"
      "number" => "[address][number]"
      "street_name" => "[address][street_name]"
      "zipcode" => "[address][zipcode]"
      "city" => "[address][city]"
    }
    replace => {
      "region" => "${REGION}"
    }
  }
}
output {
#  elasticsearch {
#    template_name => "bano"
#    template_overwrite => true
#    template => "bano.json"
#    index => ".bano-${REGION}"
#    document_id => "%{[id]}"
#  }
  amazon_es {
    hosts => ["aws_es_host"]
    region => "eu-west-1"
    # aws_access_key_id and aws_secret_access_key are optional if instance profile is configured
    aws_access_key_id => ''
    aws_secret_access_key => ''
    template_name => "bano"
    template_overwrite => true
    template => "bano.json"
    index => "bano-${REGION}"
    document_id => "%{[id]}"    
  }
#  stdout { codec => json }
}
