input {
  beats {
    port => 5044
  }
}
filter {
  csv {
    separator => "|"
    columns => ["code_service_ch","reference_document","un_articles_cgi","deux_articles_cgi","trois_articles_cgi","quatre_articles_cgi","cinq_articles_cgi","no_disposition","date_mutation","nature_mutation","valeur_fonciere","[address][number]","btq","[address][street_type]","code_voie","[address][street_voie]","[address][zipcode]","[address][city]","code_departement","code_commune","prefixe_de_section","section","no_plan","no_volume","premierer_lot","surface_carrez_du_premier_lot","deuxieme_lot","surface_carrez_du_deuxieme_lot","troisieme_lot","surface_carrez_du troisieme_lot","quatrieme_lot","surface_carrez_du_quatrieme_lot","cinquieme_lot","surface_carrez_du_cinquieme_lot","nombre_de_lots","code_type_local","type_local","identifiant_local","surface_reelle_bati","nombre_pieces_principales","nature_culture","nature_culture_speciale","surface_terrain"]

    remove_field => ["host", "@version", "@timestamp","beat","source","tags","offset","prospector","message"]
  }

  if [address][street_type] {
      mutate { add_field => { "[address][street_name]" => "%{[address][street_type]} %{[address][street_voie]}" } }
  }
  else {
      mutate { add_field => { "[address][street_name]" => "%{[address][street_voie]}" } }
  }

  if [address][zipcode] {
    mutate { add_field => { "dept" => "%{[address][zipcode]}" } }
    truncate { 
      fields => ["dept"]
      length_bytes => 2
    }
    if [dept] == "97" {
      mutate { replace => { "dept" => "%{[address][zipcode]}" } }
      truncate { 
        fields => ["dept"]
        length_bytes => 3
      } 
    }
    mutate { add_field => { "index_suffix" => "-%{dept}" } }
  } else {
    mutate { add_field => { "dept" => "" } }
    mutate { add_field => { "index_suffix" => "" } }
  }
  if [location][lat] and [location][lon] {
    elasticsearch {
      hosts => ["aws_es_host"]
      query_template => "search-by-geo.json"
      index => "bano"
      fields => {
        "location" => "[location]"
        "address" => "[address]"
      }
      remove_field => ["headers", "host", "@version", "@timestamp", "index_suffix", "dept"]
    }
  } else {
    elasticsearch {
     hosts => ["aws_es_host"]
     query_template => "search-by-name.json"
      index => "bano"
      fields => {
        "location" => "[location]"
        "address" => "[address]"
      }
      remove_field => ["headers", "host", "@version", "@timestamp", "index_suffix", "dept"]
    }
  }
}
output {
#  stdout { codec => rubydebug }
  amazon_es {
    hosts => ["aws_es_host"]
    region => "eu-west-1"
    # aws_access_key_id and aws_secret_access_key are optional if instance profile is configured
    aws_access_key_id => ''
    aws_secret_access_key => ''
    #template_name => "realestates"
    #template_overwrite => true
    #template => "realestates.json"
    index => "realestates"
  }
}
